name: "Build"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: "Build and release"
    runs-on: ubuntu-latest

    steps:
      #1 Checkout repository
      - name: "Checkout repository"
        uses: actions/checkout@v4
      
      #2 SetupJava
      - name: "Setup Java"
        uses: actions/setup-java@v4
        with:
          distribution: "oracle"
          java-version: "17"
          cache: 'gradle'
      
      #3 SetupFlutter
      - name: "Setup Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.4
          cache: true
      
      #4 Install dependencies
      - name: "Install dependencies"
        run: flutter pub get

      #5 Setup Keystore
      - name: "Decode keystore"
        run: |
          echo ${{ secrets.KEYSTORE_BASE64 }} | base64 --decode > android/app/keystore.jks
      - name: "Create key.properties"
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties
      #6 Build APK
      - name: "Build APK"
        run: flutter build apk --release
      #7 Building App Bundle (aab)
      - name: "Build App Bundle"
        run: flutter build appbundle --release
      
      #8 Upload Artifacts
      - name: "Upload Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
      
      #9 Extract Version
      - name: "Extract version from pubspec.yaml"
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV
      #10 Check if Tag Exists
      - name: "Check if Tag Exists"
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
      #11 Modify Tag if it Exists
      - name: "Modify Tag"
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      #11.1 Rename artifacts
      - name: "Rename Artifacts"
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/amp-v${{ env.VERSION }}.apk
          mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/amp-v${{ env.VERSION }}.aab
            
      #12 Create Release
      - name: "Create Release"
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/amp-v${{ env.VERSION }}.apk,build/app/outputs/bundle/amp-v${{ env.VERSION }}.aab"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}